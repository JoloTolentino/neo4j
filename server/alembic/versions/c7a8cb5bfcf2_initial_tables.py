"""initial tables

Revision ID: c7a8cb5bfcf2
Revises:
Create Date: 2025-04-18 20:47:26.765775

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "c7a8cb5bfcf2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "movies",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("ratings", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("uuid", sa.String(), nullable=False),
        sa.CheckConstraint("ratings > 0 AND  ratings<=5.0", name="rating constraints"),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("title"),
    )
    op.create_table(
        "Persons",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("role", sa.Enum("actor", "director", name="roles"), nullable=False),
        sa.Column("movie_id", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("uuid", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "movie_tags",
        sa.Column("movie_title", sa.String(), nullable=False),
        sa.Column(
            "tag",
            sa.Enum("horror", "love", "comedy", "action", name="movietagenums"),
            nullable=False,
        ),
        sa.Column("uuid", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["movie_title"],
            ["movies.title"],
        ),
        sa.PrimaryKeyConstraint("movie_title", "tag", "uuid"),
    )
    op.drop_table("attempts")
    op.drop_table("banned_users")
    op.drop_table("subscriptions")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("uuid", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column(
            "firstname", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
        sa.Column(
            "lastname", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.VARCHAR(length=120), autoincrement=False, nullable=False),
        sa.Column(
            "username", sa.VARCHAR(length=20), autoincrement=False, nullable=False
        ),
        sa.Column(
            "password", sa.VARCHAR(length=250), autoincrement=False, nullable=False
        ),
        sa.Column("is_online", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "last_login", sa.VARCHAR(length=20), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("uuid", name="users_pkey"),
        sa.UniqueConstraint("email", name="users_email_key"),
        sa.UniqueConstraint("username", name="users_username_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column(
            "tier",
            postgresql.ENUM("FREE", "PRO", "ENTERPRISE", name="tiers"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "expiration", sa.VARCHAR(length=40), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["uuid"], ["users.uuid"], name="subscriptions_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="subscriptions_pkey"),
        sa.UniqueConstraint("uuid", name="subscriptions_uuid_key"),
    )
    op.create_table(
        "banned_users",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("reason", sa.VARCHAR(length=250), autoincrement=False, nullable=True),
        sa.Column(
            "banned_at", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["uuid"], ["users.uuid"], name="banned_users_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="banned_users_pkey"),
    )
    op.create_table(
        "attempts",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.VARCHAR(length=40), autoincrement=False, nullable=False),
        sa.Column("failed_logins", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "lockout_until", sa.VARCHAR(length=30), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(["uuid"], ["users.uuid"], name="attempts_uuid_fkey"),
        sa.PrimaryKeyConstraint("id", name="attempts_pkey"),
        sa.UniqueConstraint("uuid", name="attempts_uuid_key"),
    )
    op.drop_table("movie_tags")
    op.drop_table("Persons")
    op.drop_table("movies")
    # ### end Alembic commands ###
